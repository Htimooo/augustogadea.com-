{"version":3,"sources":["app.js"],"names":["pagina","enlacesDiv","document","querySelector","enlaces","querySelectorAll","ham","barras","body","iniciarApp","mostrarObra","mostrarSeccion","cambiarPagina","classList","add","remove","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","link","toggle","child","async","resultado","fetch","db","json","obras","obra","id","nombre","descripcion","anio","imagenes","imagenesObra","createElement","img","imagen","src","lista","imagenId","appendChild","onclick","agrandarImagen","nombreObra","textContent","descripcionObra","anioObra","obraContenedor","error","console","log","overlay","cerrarImagen"],"mappings":"AAAA,IAAAA,OAAA,EACA,MAAAC,WAAAC,SAAAC,cAAA,iBACAC,QAAAF,SAAAG,iBAAA,sBACAC,IAAAJ,SAAAC,cAAA,QACAI,OAAAL,SAAAG,iBAAA,aACAG,KAAAN,SAAAC,cAAA,QAMA,SAAAM,aAEAC,cAEAC,iBAIAC,gBAGA,SAAAD,iBAEAT,SAAAC,cAAA,SAAAH,QACAa,UAAAC,IAAA,mBACAb,WAAAY,UAAAE,OAAA,YAIA,SAAAH,gBAEAR,QAAAY,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,IACAA,EAAAC,iBACApB,OAAAqB,SAAAF,EAAAG,OAAAC,QAAAC,MACAhB,KAAAK,UAAAE,OAAA,cAIAb,SAAAC,cAAA,oBAAAU,UAAAE,OAAA,mBAEAb,SAAAC,cAAA,SAAAH,QAEAa,UAAAC,IAAA,mBACAb,WAAAY,UAAAY,OAAA,YAEAlB,OAAAS,QAAAU,IAAAA,EAAAb,UAAAY,OAAA,iBAMAE,eAAAjB,cACA,IACA,MAAAkB,QAAAC,MAAA,gBACAC,QAAAF,EAAAG,QAEAC,MAAAA,GAAAF,EAGAE,EAAAhB,QAAAiB,IACA,MAAAC,GAAAA,EAAAC,OAAAA,EAAAC,YAAAA,EAAAC,KAAAA,EAAAC,SAAAA,GAAAL,EAOAM,EAAArC,SAAAsC,cAAA,MACAF,EAAAtB,QAAAyB,IACA,MAAAC,EAAAxC,SAAAsC,cAAA,OACAE,EAAAC,IAAAF,EACA,MAAAG,EAAA1C,SAAAsC,cAAA,MAEAE,EAAAnB,QAAAsB,SAAAJ,EAIAG,EAAAE,YAAAJ,GACAH,EAAAO,YAAAF,GAGAF,EAAAK,QAAAC,iBAIA,MAAAC,EAAA/C,SAAAsC,cAAA,KACAS,EAAAC,YAAAf,EAGAc,EAAApC,UAAAC,IAAA,eAIA,MAAAqC,EAAAjD,SAAAsC,cAAA,KACAW,EAAAD,YAAAd,EAIAe,EAAAtC,UAAAC,IAAA,oBAIA,MAAAsC,EAAAlD,SAAAsC,cAAA,KACAY,EAAAF,YAAAb,EAGAe,EAAAvC,UAAAC,IAAA,aAIAyB,EAAA1B,UAAAC,IAAA,iBAIA,MAAAuC,EAAAnD,SAAAsC,cAAA,OACAa,EAAAxC,UAAAC,IAAA,mBAGAuC,EAAAP,YAAAP,GAKArC,SAAAC,cAAA,WAAA2C,YAAAO,KAIA,MAAAC,GACAC,QAAAC,IAAAF,IAYA,SAAAN,eAAA7B,GAEA,MAAAuB,EAAAxC,SAAAsC,cAAA,OACAE,EAAAC,IAAAxB,EAAAG,OAAAC,QAAAsB,SAEA,MAAAY,EAAAvD,SAAAsC,cAAA,OACAiB,EAAAX,YAAAJ,GAEAe,EAAA5C,UAAAC,IAAA,WAGA2C,EAAAV,QAAA,WACAU,EAAA1C,SACAP,KAAAK,UAAAE,OAAA,eAKAP,KAAAsC,YAAAW,GACAjD,KAAAK,UAAAC,IAAA,cAGA,MAAA4C,EAAAxD,SAAAsC,cAAA,KACAkB,EAAAR,YAAA,IACAQ,EAAA7C,UAAAC,IAAA,cAGA4C,EAAAX,QAAA,WACAU,EAAA1C,SACAP,KAAAK,UAAAE,OAAA,eAGA0C,EAAAX,YAAAY,GAvKAxD,SAAAgB,iBAAA,oBAAA,WACAT,gBA8HAH,IAAAY,iBAAA,QAAA,KACAjB,WAAAY,UAAAY,OAAA,YACAjB,KAAAK,UAAAY,OAAA,cACAlB,OAAAS,QAAAU,IAAAA,EAAAb,UAAAY,OAAA","file":"bundle.js","sourcesContent":["let pagina = 1;\r\nconst enlacesDiv = document.querySelector('.enlaces-menu');\r\nconst enlaces = document.querySelectorAll('.enlaces-menu span');\r\nconst ham = document.querySelector('.ham');\r\nconst barras = document.querySelectorAll('.ham span');\r\nconst body = document.querySelector('body');\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    //La idea es que esta funciÃ³n consulte a una API donde esten todos los trabajos\r\n    mostrarObra();\r\n\r\n    mostrarSeccion();\r\n\r\n\r\n    //\r\n    cambiarPagina();\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n\r\n    const seccionActual = document.querySelector(`#link-${pagina}`);\r\n    seccionActual.classList.add('mostrar-seccion');\r\n    enlacesDiv.classList.remove('activado');\r\n\r\n}\r\n\r\nfunction cambiarPagina() {\r\n\r\n    enlaces.forEach(enlace => {\r\n        enlace.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            pagina = parseInt(e.target.dataset.link);\r\n            body.classList.remove('fijar-body');\r\n\r\n\r\n            //Eliminar mostrar-seccion de la seccion anterior\r\n            document.querySelector('.mostrar-seccion').classList.remove('mostrar-seccion');\r\n\r\n            const seccion = document.querySelector(`#link-${pagina}`);\r\n\r\n            seccion.classList.add('mostrar-seccion');\r\n            enlacesDiv.classList.toggle('activado');\r\n\r\n            barras.forEach(child => { child.classList.toggle('animado') });\r\n        })\r\n    })\r\n\r\n}\r\n\r\nasync function mostrarObra() {\r\n    try {\r\n        const resultado = await fetch('./obras.json');\r\n        const db = await resultado.json();\r\n\r\n        const { obras } = db;\r\n        //\r\n        //Generar HTML\r\n        obras.forEach(obra => {\r\n            const { id, nombre, descripcion, anio, imagenes } = obra;\r\n\r\n\r\n            //DOM scripting \r\n\r\n\r\n            //agregar imagenes \r\n            const imagenesObra = document.createElement('ul');\r\n            imagenes.forEach(img => {\r\n                const imagen = document.createElement('IMG');\r\n                imagen.src = img;\r\n                const lista = document.createElement('LI');\r\n\r\n                imagen.dataset.imagenId = img;\r\n\r\n\r\n                //agrego imagenen a html\r\n                lista.appendChild(imagen);\r\n                imagenesObra.appendChild(lista);\r\n\r\n                //agrego evento a imagenes\r\n                imagen.onclick = agrandarImagen;\r\n            })\r\n\r\n            // Se crea parrafo con nombre\r\n            const nombreObra = document.createElement('P');\r\n            nombreObra.textContent = nombre;\r\n\r\n            //se le agrega la clase para poder darle estilso css\r\n            nombreObra.classList.add('nombre-obra');\r\n\r\n\r\n            // Se crea parrafo con descripcion\r\n            const descripcionObra = document.createElement('P');\r\n            descripcionObra.textContent = descripcion;\r\n\r\n\r\n            //se le agrega la clase para poder darle estilso css\r\n            descripcionObra.classList.add('descripcion-obra');\r\n\r\n\r\n            // Se crea parrafo con fecha\r\n            const anioObra = document.createElement('P');\r\n            anioObra.textContent = anio;\r\n\r\n            //se le agrega la clase para poder darle estilso css\r\n            anioObra.classList.add('anio-obra');\r\n\r\n\r\n            //se le agrega la clase para poder darle estilso css\r\n            imagenesObra.classList.add('imagenes-obra');\r\n\r\n            //Inyectar array imagenes en imagenes-obra\r\n            //se crea div contenedor de obra\r\n            const obraContenedor = document.createElement('DIV');\r\n            obraContenedor.classList.add('obra-contenedor');\r\n\r\n            //Inyectar nombre y fecha en obra-contenedor en HTML\r\n            obraContenedor.appendChild(imagenesObra);\r\n\r\n\r\n\r\n            //Inyectar en el HTML\r\n            document.querySelector('#link-1').appendChild(obraContenedor);\r\n\r\n\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nham.addEventListener('click', () => {\r\n    enlacesDiv.classList.toggle('activado');\r\n    body.classList.toggle('fijar-body');\r\n    barras.forEach(child => { child.classList.toggle('animado') });\r\n\r\n\r\n})\r\n\r\nfunction agrandarImagen(e) {\r\n\r\n    const imagen = document.createElement('IMG');\r\n    imagen.src = e.target.dataset.imagenId;\r\n\r\n    const overlay = document.createElement('DIV');\r\n    overlay.appendChild(imagen);\r\n\r\n    overlay.classList.add('overlay');\r\n\r\n    //cerrar cuando se hace click en cualquier parte de la pantalla \r\n    overlay.onclick = function() {\r\n        overlay.remove();\r\n        body.classList.remove('fijar-body');\r\n    }\r\n\r\n    //mostrar en el HTML\r\n\r\n    body.appendChild(overlay);\r\n    body.classList.add('fijar-body');\r\n\r\n    //boton para cerrar imagen\r\n    const cerrarImagen = document.createElement('P');\r\n    cerrarImagen.textContent = 'X';\r\n    cerrarImagen.classList.add('btn-cerrar');\r\n\r\n    //agregar evento para que funcione el boton de cerrar\r\n    cerrarImagen.onclick = function() {\r\n        overlay.remove();\r\n        body.classList.remove('fijar-body');\r\n    }\r\n\r\n    overlay.appendChild(cerrarImagen);\r\n\r\n    //quitar clase que fija el body cuando \r\n\r\n\r\n}"]}